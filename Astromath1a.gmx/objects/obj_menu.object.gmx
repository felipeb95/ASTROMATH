<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var url = "http://localhost/curl/curl.php";
http_get(url);*/
global.loaded = 0;
menu[0]="Presiona ENTER para comenzar a jugar";
line_spacing=15; //Line Spacing
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var json = async_load[? "result"]
show_debug_message(json);
var map = json_decode(json);

if(map = -1){
    show_debug_message("Invalid result");
}

if(ds_map_exists(map, "menorMultiplo")){
    var menorMultiplo = map[? "menorMultiplo"];
     show_debug_message("menorMultiplo funciona");
     show_debug_message(menorMultiplo);
     global.minA = real(menorMultiplo);
}

if(ds_map_exists(map, "mayorMultiplo")){
    var mayorMultiplo = map[? "mayorMultiplo"];
     show_debug_message("mayorMultiplo funciona");
     show_debug_message(mayorMultiplo);
     global.maxB = real(mayorMultiplo);
}

if(ds_map_exists(map, "rondas")){
    var rondas = map[? "rondas"];
    show_debug_message("rondas funciona");
    show_debug_message(ds_list_size(rondas));
    for(i = 0; i &lt; ds_list_size(rondas); i++){
        show_debug_message(rondas[| i]);
        array = explode(",", rondas[| i]);
        
        global.eFacil[i] = real(array[0]);
        global.eMedio[i] = real(array[1]);
        global.eDificil[i] = real(array[2]);
        /*
        for(j = 0; j&lt;array_length_1d(array);j++)
            show_debug_message(array[j]);   
        */
    }
    global.sets = ds_list_size(rondas);
}

global.loaded = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center); //Horizontal alignment
draw_set_valign(fa_middle);  //Vertical alignment
draw_set_font(fntMainMed);
menu_x=room_width/2; 
menu_y=room_height/2;
draw_set_colour(c_white);
draw_text(menu_x, menu_y, "Presiona ENTER para comenzar");
draw_sprite(spr_white_enter, 0 , menu_x, menu_y+100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.modo = 2; //Antiguamente 2 era para multiplicaciones.
/*if(global.loaded==1) */room_goto(rm_instructions);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
