<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed = 30;
audio_play_sound(laser,10,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_asteroid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//bala choca con other (asteroide)
audio_play_sound(asteroid_explosion,10,false);
with (other){
    global.numM = other.u7;  
    instance_change(obj_explode,true);
    if(!global.respondida) {
        global.intentos++;
        global.estado = "incorrecta";
        ds_map_add(global.intentosRonda, global.intentos, global.numM);
    }
}

if(global.r == global.numM){ //BUENA
    if(global.origen!="buenas"){ //SI PROVIENE DE RANDOM O MALAS
        if(global.operacion=="M"){
            global.memABM[global.imemBM]=global.a;
            global.memBBM[global.imemBM]=global.b;
            global.imemBM++;
            show_debug_message("Se agrega a memoria buenas M");
            if(global.imemMM&gt;0){
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
                for(i=0;i&lt;global.imemMM;i++){
                    if(global.a!=global.memAMM[i] and global.b!=global.memBMM[i]){
                       arrayAuxA[contAux]=global.memAMM[i] 
                       arrayAuxB[contAux]=global.memBMM[i]
                       contAux++; 
                    }
                }
                global.memAMM = undefined;
                global.memBMM = undefined;
                global.memAMM = arrayAuxA;
                global.memBMM = arrayAuxB;
                global.imemMM = contAux;
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
            }
        }
        if(global.operacion=="D"){
            global.memABD[global.imemBD]=global.a;
            global.memBBD[global.imemBD]=global.b;
            global.imemBD++;
            show_debug_message("Se agrega a memoria buenas D");
            if(global.imemMD&gt;0){
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
                for(i=0;i&lt;global.imemMD;i++){
                    if(global.a!=global.memAMD[i] and global.b!=global.memBMD[i]){
                       arrayAuxA[contAux]=global.memAMD[i] 
                       arrayAuxB[contAux]=global.memBMD[i]
                       contAux++; 
                    }
                }
                global.memAMD = undefined;
                global.memBMD = undefined;
                global.memAMD = arrayAuxA;
                global.memBMD = arrayAuxB;
                global.imemMD = contAux;
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
            }
        }
        if(global.operacion=="S"){
            global.memABS[global.imemBS]=global.a;
            global.memBBS[global.imemBS]=global.b;
            global.imemBS++;
            show_debug_message("Se agrega a memoria buenas S");
            if(global.imemMS&gt;0){
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
                for(i=0;i&lt;global.imemMS;i++){
                    if(global.a!=global.memAMS[i] and global.b!=global.memBMS[i]){
                       arrayAuxA[contAux]=global.memAMS[i] 
                       arrayAuxB[contAux]=global.memBMS[i]
                       contAux++; 
                    }
                }
                global.memAMS = undefined;
                global.memBMS = undefined;
                global.memAMS = arrayAuxA;
                global.memBMS = arrayAuxB;
                global.imemMS = contAux;
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
            }
        }
        if(global.operacion=="R"){
            global.memABR[global.imemBR]=global.a;
            global.memBBR[global.imemBR]=global.b;
            global.imemBR++;
            show_debug_message("Se agrega a memoria buenas R");
            if(global.imemMR&gt;0){
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
                for(i=0;i&lt;global.imemMR;i++){
                    if(global.a!=global.memAMR[i] and global.b!=global.memBMR[i]){
                       arrayAuxA[contAux]=global.memAMR[i] 
                       arrayAuxB[contAux]=global.memBMR[i]
                       contAux++; 
                    }
                }
                global.memAMR = undefined;
                global.memBMR = undefined;
                global.memAMR = arrayAuxA;
                global.memBMR = arrayAuxB;
                global.imemMR = contAux;
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
            }
        }
    }
    else show_debug_message("Proviene de buenas, no se agrega nuevamente");
    global.malasSeguidas=0;
    global.nrondasc++;
    /*if(global.nrondasc&gt;=2 &amp;&amp; global.sp2&gt;global.max_vel){
        global.sp1 -= global.acel;
        global.sp2 -= global.acel;
        global.sp3 -= global.acel;
        show_debug_message("SUBE VEL");
    }*/
    x = view_xview + view_wview/2;
    y = view_yview + view_hview/2;
    instance_create(x,y,obj_textbox_celebracion);
    
    /*if(global.wave&lt;9){
        global.oBuenas[global.a]++;
        global.oBuenas[global.b]++;
    }*/
    global.respondida = true;
    global.puntaje += 10;
    global.correctas++;
    if(global.nrondasc&gt;global.nrondas) global.nrondas=global.nrondasc;
    
    global.tiempoUltimaRespuesta = global.segundos - global.aparicionCorrecta;
    audio_play_sound(correct,10,false);
    obj_ship.hp+=1;
    global.bot2=1;
    if(obj_ship.hp&gt;3) obj_ship.hp=3;
    global.estado = "correcta";
    global.on_screen = false;
}else{  //MALA
    if(global.origen!="malas"){ //SI PROVIENE DE RANDOM O BUENAS
        if(global.operacion=="M"){
            global.memAMM[global.imemMM]=global.a;
            global.memBMM[global.imemMM]=global.b;
            global.imemMM++;
            show_debug_message("Se agrega a memoria malas M");
            if(global.imemBM&gt;0){
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
                for(i=0;i&lt;global.imemBM;i++){
                    if(global.a!=global.memABM[i] and global.b!=global.memBBM[i]){
                       arrayAuxA[contAux]=global.memABM[i] 
                       arrayAuxB[contAux]=global.memBBM[i]
                       contAux++; 
                    }
                }
                global.memABM = undefined;
                global.memBBM = undefined;
                global.memABM = arrayAuxA;
                global.memBBM = arrayAuxB;
                global.imemBM = contAux;
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
            }
        }
        if(global.operacion=="D"){
            global.memAMD[global.imemMD]=global.a;
            global.memBMD[global.imemMD]=global.b;
            global.imemMD++;
            show_debug_message("Se agrega a memoria malas D");
            if(global.imemBD&gt;0){
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
                for(i=0;i&lt;global.imemBD;i++){
                    if(global.a!=global.memABD[i] and global.b!=global.memBBD[i]){
                       arrayAuxA[contAux]=global.memABD[i] 
                       arrayAuxB[contAux]=global.memBBD[i]
                       contAux++; 
                    }
                }
                global.memABD = undefined;
                global.memBBD = undefined;
                global.memABD = arrayAuxA;
                global.memBBD = arrayAuxB;
                global.imemBD = contAux;
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
            }
        }
        if(global.operacion=="S"){
            global.memAMS[global.imemMS]=global.a;
            global.memBMS[global.imemMS]=global.b;
            global.imemMS++;
            show_debug_message("Se agrega a memoria malas S");
            if(global.imemBS&gt;0){
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
                for(i=0;i&lt;global.imemBS;i++){
                    if(global.a!=global.memABS[i] and global.b!=global.memBBS[i]){
                       arrayAuxA[contAux]=global.memABS[i] 
                       arrayAuxB[contAux]=global.memBBS[i]
                       contAux++; 
                    }
                }
                global.memABS = undefined;
                global.memBBS = undefined;
                global.memABS = arrayAuxA;
                global.memBBS = arrayAuxB;
                global.imemBS = contAux;
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
            }
        }
        if(global.operacion=="R"){
            global.memAMR[global.imemMR]=global.a;
            global.memBMR[global.imemMR]=global.b;
            global.imemMR++;
            show_debug_message("Se agrega a memoria malas R");
            if(global.imemBR&gt;0){
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
                for(i=0;i&lt;global.imemBR;i++){
                    if(global.a!=global.memABR[i] and global.b!=global.memBBR[i]){
                       arrayAuxA[contAux]=global.memABR[i] 
                       arrayAuxB[contAux]=global.memBBR[i]
                       contAux++; 
                    }
                }
                global.memABR = undefined;
                global.memBBR = undefined;
                global.memABR = arrayAuxA;
                global.memBBR = arrayAuxB;
                global.imemBR = contAux;
                var arrayAuxA = undefined;
                var arrayAuxB = undefined;
                var contAux = 0;
            }
        }
    }
    else show_debug_message("Proviene de malas, no se agrega nuevamente");
    global.malasSeguidas++;
    global.nrondasc=0;
    /*if(global.malasSeguidas&gt;=2 &amp;&amp; global.sp2&lt;global.min_vel){
        global.sp1 += global.acel;
        global.sp2 += global.acel;
        global.sp3 += global.acel;
        show_debug_message("BAJA VEL");
    }
    */
    x = view_xview + view_wview/2;
    y = view_yview + view_hview/2;
    instance_create(x,y,obj_textbox_correccion);

    if(global.puntaje&gt;=10)    global.puntaje -=10;
    global.incorrectas++;
    audio_play_sound(incorrect,10,false);
    obj_ship.hp-=1;
    if(obj_ship.hp == 0){
        show_debug_message("MURIÓ POR MAL DISPARO, CORRER SCRIPT");
        guardar(true); // SE EXPORTA A JSON Y SE ENVIA A PHP PARA STORE
    }
    global.bot2=1;
    global.on_screen = false;
}

global.ccont++;
global.feedback = 1;
instance_create(x,y,obj_shake);

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
