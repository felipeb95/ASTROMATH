<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
global.memA=0;
global.memB=0;
global.destruir=false;
muted = 0;
global.malasSeguidas=0;
global.operacion = "";
global.wave = 1;
global.waveFake = 1;
global.waveUltraFake = 1;
global.origen = "random";
//ESTO PQ NO FUNCIONA LA PARAMETRIZACION
/*
global.minA=2;
global.maxB=9;
*/
//NO TOCAR

global.nEjercicios=global.maxB-global.minA+1;
global.nTests=global.nEjercicios/2;
for(i=0;i&lt;(global.maxB-global.minA+1);i++){
    global.numero[i]=global.minA+i;
}
//SETS
/*
global.sets = 5;
//PORCENTAJES
global.eFacil[0]=5;
global.eMedio[0]=2;
global.eDificil[0]=1;

global.eFacil[1]=3;
global.eMedio[1]=4;
global.eDificil[1]=1;

global.eFacil[2]=2;
global.eMedio[2]=3;
global.eDificil[2]=3;

global.eFacil[3]=2;
global.eMedio[3]=2;
global.eDificil[3]=4;

global.eFacil[4]=1;
global.eMedio[4]=2;
global.eDificil[4]=5;
*/
//PARA LAS SIGUIENTES SE MANTIENE LA ULTIMA

var dist = 1;
for(i=global.sets;i&lt;100;i++){
    global.eFacil[i]=global.eFacil[i-dist];
    global.eMedio[i]=global.eMedio[i-dist];
    global.eDificil[i]=global.eDificil[i-dist];
    dist++;
}

global.sets = 100;
global.sp1 = global.min_vel+0.1;
global.sp2 = global.min_vel;
global.sp3 = global.min_vel-0.1;
global.ws = 0; //creo q se puede quitar
global.alternativa=choose(floor(random_range(1,5)));
global.correctas=0;
global.incorrectas=0;
global.idUser="";
global.puntaje=0; //SCORE
global.numM=0; //ALTERNATIVA
global.cont=0;
global.ccont=0;
global.alarma = 0;
global.bot = 0;
global.bot2 =0;
global.alturas=choose(floor(random_range(0,4)));
global.ejercicio = 0;
global.nrondas=0; //RONDAS SEGUIDAS
global.nrondasc=0
global.contadorcito = 2;

global.dificultad = -1;
//DIFICULTAD POR SET DE RONDAS


global.numeros = undefined;
//OCURRENCIAS MALAS
for(i=global.minA;i&lt;=global.maxB;i++){
    global.oBuenas[i]=0;
}
global.iF = 0;
global.iM = 0;
global.iD = 0;


global.estado = "omitida";
global.intentos = 0;
global.numEjercicio = 1;
global.respondida = 0;
global.segundos = 0;
global.aparicionCorrecta = 0;
global.tiempoUltimaRespuesta = 0;

global.arrAltura[0,0] = 208;
global.arrAltura[1,0] = 124;
global.arrAltura[2,0] = 40;
global.arrAltura[3,0] = 376;
global.arrAltura[4,0] = 282;

global.arrAltura[0,1] = 50;
global.arrAltura[1,1] = 218;
global.arrAltura[2,1] = 134;
global.arrAltura[3,1] = 302;
global.arrAltura[4,1] = 386;

global.arrAltura[0,2] = 129;
global.arrAltura[1,2] = 381;
global.arrAltura[2,2] = 297;
global.arrAltura[3,2] = 45;
global.arrAltura[4,2] = 213;

global.arrAltura[0,3] = 223;
global.arrAltura[1,3] = 55;
global.arrAltura[2,3] = 307;
global.arrAltura[3,3] = 391;
global.arrAltura[4,3] = 139;

global.arrAltura[0,4] = 203;
global.arrAltura[1,4] = 345;
global.arrAltura[2,4] = 371;
global.arrAltura[3,4] = 287;
global.arrAltura[4,4] = 35;

global.bigMap = ds_map_create();
global.intentosRonda = ds_map_create();
global.dificultadesMap = ds_map_create();

global.faciles = undefined;
global.medios = undefined;
global.dificiles = undefined;

meteoros = 5;
spawn_rate = 50;
alarm[0] = spawn_rate;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
randomize();
randY = choose(floor(random_range(40,room_height-40)));
//crear asteroide
if(global.cont&lt;meteoros){
global.cont++;
nuevay = global.cont-1;
if(global.cont!=global.alternativa){
    instance_create(room_width + 40, global.arrAltura[nuevay,global.alturas], obj_asteroid);

}else{
    global.bot=1;
    nuevay = global.cont-1;
    instance_create(room_width + 40, global.arrAltura[nuevay,global.alturas], obj_asteroid);
    global.bot=0;
}
draw_set_color(c_white);
draw_set_font(fntMain);

}
//AQUÍ SE CUMPLE UNA OLEADA
if(global.ccont == meteoros){ //contador de meteoritos destruidos o q salen de pantalla
        global.destruir=false;
        show_debug_message("Número ejercicio:")
        show_debug_message(global.numEjercicio);
        show_debug_message("multiplo A:")
        show_debug_message(global.a)
        show_debug_message("multiplo B:")
        show_debug_message(global.b)
        show_debug_message("Respuesta:")
        show_debug_message(global.r)
        show_debug_message("Intentos:")
        show_debug_message(global.intentos);
        show_debug_message("Tiempo ultima ronda:")
        show_debug_message(global.tiempoUltimaRespuesta);
        show_debug_message("Estado de la respuesta:")
        show_debug_message(global.estado);
        
        roundMap = ds_map_create();
        ds_map_add(roundMap, "multiplo_a", global.a);
        ds_map_add(roundMap, "multiplo_b", global.b);
        ds_map_add(roundMap, "respuesta_correcta", global.r);
        ds_map_add(roundMap, "total_intentos", global.intentos);
        ds_map_add(roundMap, "ultima_respuesta", global.numM);
        ds_map_add(roundMap, "tiempo_respuesta", global.tiempoUltimaRespuesta);
        ds_map_add(roundMap, "estado_respuesta",global.estado);
        ds_map_add(roundMap, "etapa",(global.dificultad+1));
        ds_map_add(roundMap, "origen",global.origen);
        ds_map_add(roundMap, "operacion",global.operacion);
        //OONDICIÓN SI ES QUE NO SE LE DISPARÓ A NINGÚN METEROTIO (NO HUBO INTENTO)
        
        var copiaIntentosRonda = ds_map_create();
        ds_map_copy(copiaIntentosRonda, global.intentosRonda);
        ds_map_add_map(roundMap, "intentos", copiaIntentosRonda);
        
        
        var copiaRonda = ds_map_create();
        ds_map_copy(copiaRonda, roundMap);
        ds_map_add_map(global.bigMap, global.numEjercicio, copiaRonda);
        
        var in = json_encode(global.intentosRonda);
        show_debug_message(in);
        var cin = json_encode(copiaIntentosRonda);
        show_debug_message(cin);
        var ro = json_encode(roundMap);
        show_debug_message(ro);
        var cro = json_encode(copiaRonda);
        show_debug_message(cro);
        
        ds_map_clear(global.intentosRonda);
        //ds_map_clear(roundMap);
        
        
        
        show_debug_message("***************************************");
        
        if(global.bot2==0){
            obj_ship.hp-=1;
            show_debug_message("no hizo nada");
            if(obj_ship.hp == 0){
             show_debug_message("MURIÓ POR OMITIR, CORRER SCRIPT");
             guardar(true); // SE EXPORTA A JSON Y SE ENVIA A PHP PARA STORE
             exit; 
            }
        }else global.bot2=0;
        global.alternativa=choose(floor(random_range(1,5)));
        global.alturas=choose(floor(random_range(0,4)));
        //meteoros ++;
        
        global.wave ++;
        global.waveFake++;
        global.waveUltraFake++;
        if(global.waveFake==global.nTests+1){
            global.waveFake=1;
        }
        
        if(global.wave==global.nEjercicios+1){
            global.existeF=0;
            global.existeM=0;
            global.existeD=0;
            for(i=global.minA;i&lt;=global.maxB;i++){
                
                if(global.oBuenas[i]==2){
                    global.faciles[global.iF]=i;
                    global.iF++;
                    global.existeF=1;
                }
                if(global.oBuenas[i]==1){
                    global.medios[global.iM]=i;
                    global.iM++;
                    global.existeM=1;
                }
                if(global.oBuenas[i]==0){
                    global.dificiles[global.iD]=i;
                    global.iD++;
                    global.existeD=1;
                }
                
            }
            
            
            if(global.existeF!=0 &amp;&amp; global.existeM==0 &amp;&amp; global.existeD==0){
                for(i=0;i&lt;global.sets;i++){
                    global.eFacil[i]=8;
                    global.eMedio[i]=0;
                    global.eDificil[i]=0;
                }
            }
            if(global.existeF==0 &amp;&amp; global.existeM!=0 &amp;&amp; global.existeD==0){
                for(i=0;i&lt;global.sets;i++){
                    global.eFacil[i]=0;
                    global.eMedio[i]=8;
                    global.eDificil[i]=0;
                }
            }
            if(global.existeF!=0 &amp;&amp; global.existeM!=0 &amp;&amp; global.existeD==0){
                for(i=0;i&lt;global.sets;i++){
                    var flag = global.eDificil[i];
                    global.eDificil[i]=0;
                    global.eMedio[i]=global.eMedio[i]+flag;
                }
            }
            if(global.existeF==0 &amp;&amp; global.existeM!=0 &amp;&amp; global.existeD!=0){
                for(i=0;i&lt;global.sets;i++){
                    var flag = global.eFacil[i];
                    global.eFacil[i]=0;
                    global.eMedio[i]=global.eMedio[i]+flag;
                }
            }
            if(global.existeF!=0 &amp;&amp; global.existeM==0 &amp;&amp; global.existeD!=0){
                for(i=0;i&lt;global.sets;i++){
                    var flag = global.eMedio[i];
                    global.eMedio[i]=0;
                    global.eDificil[i]=global.eDificil[i]+flag;
                }
            }
        }
        if(global.waveUltraFake==global.nEjercicios+1){
            global.waveUltraFake=1;
            global.dificultad++;
            if(global.existeF==1){
                show_debug_message("FACILES: ");
                show_debug_message(global.faciles);
                var size = array_length_1d(global.faciles);
                var i,j,k;
                for(i=0;i&lt;size;i++){
                    j=irandom_range(i,size-1);
                    if(i!=j){
                        k=global.faciles[i];
                        global.faciles[i]=global.faciles[j];
                        global.faciles[j]=k;
                        
                    }
                }
                show_debug_message("FACILES DESORDENADAS: ");
                show_debug_message(global.faciles);
            }
            if(global.existeM==1){
                show_debug_message("MEDIOS: ");
                show_debug_message(global.medios);
                var size = array_length_1d(global.medios);
                var i,j,k;
                for(i=0;i&lt;size;i++){
                    j=irandom_range(i,size-1);
                    if(i!=j){
                        k=global.medios[i];
                        global.medios[i]=global.medios[j];
                        global.medios[j]=k;
                        
                    }
                }
                show_debug_message("MEDIOS DESORDENADAS: ");
                show_debug_message(global.medios);
            }
            if(global.existeD==1){
                show_debug_message("DIFICILES: ");
                show_debug_message(global.dificiles);
                var size = array_length_1d(global.dificiles);
                var i,j,k;
                for(i=0;i&lt;size;i++){
                    j=irandom_range(i,size-1);
                    if(i!=j){
                        k=global.dificiles[i];
                        global.dificiles[i]=global.dificiles[j];
                        global.dificiles[j]=k;
                        
                    }
                }
                show_debug_message("DIFICILES DESORDENADAS: ");
                show_debug_message(global.dificiles);
            }
        }
        show_debug_message("Ronda");
        show_debug_message(global.dificultad+1);
        if(global.dificultad&gt;=0){show_debug_message("EJERCICIOS FACILES POR SALIR: ");show_debug_message(global.eFacil[global.dificultad]);}
        if(global.dificultad&gt;=0){show_debug_message("EJERCICIOS MEDIOS POR SALIR: ");show_debug_message(global.eMedio[global.dificultad]);}
        if(global.dificultad&gt;=0){show_debug_message("EJERCICIOS DIFICLES POR SALIR: ");show_debug_message(global.eDificil[global.dificultad]);}

        show_debug_message("Ejercicio");
        show_debug_message(global.waveUltraFake);
        
        if(global.modo==0) {
            indexO = choose(round(random_range(0,string_length(global.operaciones))));
            global.operacion = string_char_at(global.operaciones, indexO);
            if(global.operacion=="M"){
                while(global.a==global.memA and global.b==global.memB){
                    global.a = choose(floor(random_range(global.minA,global.maxB)));
                    global.b = choose(floor(random_range(global.minA,global.maxB)));
                }
                global.r = global.a*global.b;
            }
            if(global.operacion=="D"){
                while(global.a==global.memA and global.b==global.memB){
                    global.a = choose(floor(random_range(global.minA,global.maxB)));
                    global.b = choose(floor(random_range(global.minA,global.a)));
                }
                global.r = floor(global.a/global.b);
            }
            if(global.operacion=="S"){
                while(global.a==global.memA and global.b==global.memB){
                    global.a = choose(floor(random_range(global.minA,global.maxB)));
                    global.b = choose(floor(random_range(global.minA,global.maxB)));
                }
                global.r = global.a+global.b;
            }
            if(global.operacion=="R"){
                while(global.a==global.memA and global.b==global.memB){
                    global.a = choose(floor(random_range(global.minA,global.maxB)));
                    global.b = choose(floor(random_range(global.minA,global.a)));
                }
                global.r = global.a-global.b;
            }
            global.memA=global.a;
            global.memB=global.b;
        }
        if(global.modo==1) {
            global.a = choose(floor(random_range(1,20)));
            global.b = choose(floor(random_range(1,global.a)));
            global.r = global.a-global.b;
        }
        if(global.modo==2) {
            randomize();
            if(global.dificultad&lt;0){
                if(global.waveFake==1){
                    for(i=0;i&lt;array_length_1d(global.numeros);i++){
                        global.numeros[i]=0;
                    }
                    global.a = choose(floor(random_range(global.minA,global.maxB)));
                    global.numeros[0]=global.a;
                    var aux=0;
                    var ii=0;
                    var arrayFake;
                    for(i=0;i&lt;array_length_1d(global.numero);i++){
                        aux=0;
                        for(j=0;j&lt;array_length_1d(global.numeros);j++){
                            if(global.numero[i]==global.numeros[j]){
                                aux=1;
                                break;
                            }
                        }
                        if(aux==0){
                            arrayFake[ii]=global.numero[i];
                            ii++;
                        }
                    }
                    var largo = array_length_1d(arrayFake)-1;
                    var indice = choose(floor(random_range(0,largo)));
                    global.b = arrayFake[indice];
                    global.numeros[1]=global.b;
                    global.r = global.a*global.b;
                }
                if(global.waveFake&gt;1){
                    var aux=0;
                    var ii=0;
                    var arrayFake;
                    for(i=0;i&lt;array_length_1d(global.numero);i++){
                        aux=0;
                        for(j=0;j&lt;array_length_1d(global.numeros);j++){
                            if(global.numero[i]==global.numeros[j]){
                                aux=1;
                                break;
                            }
                        }
                        if(aux==0){
                            arrayFake[ii]=global.numero[i];
                            ii++;
                        }
                    }
                    var largo = array_length_1d(arrayFake)-1;
                    var indice = choose(floor(random_range(0,largo)));
                    global.a = arrayFake[indice];
                    global.numeros[global.contadorcito]=global.a;
                    global.contadorcito++;
                    
                    var aux=0;
                    var ii=0;
                    var arrayFake;
                    for(i=0;i&lt;array_length_1d(global.numero);i++){
                        aux=0;
                        for(j=0;j&lt;array_length_1d(global.numeros);j++){
                            if(global.numero[i]==global.numeros[j]){
                                aux=1;
                                break;
                            }
                        }
                        if(aux==0){
                            arrayFake[ii]=global.numero[i];
                            ii++;
                        }
                    }
                    var largo = array_length_1d(arrayFake)-1;
                    var indice = choose(floor(random_range(0,largo)));
                    global.b = arrayFake[indice];
                    global.numeros[global.contadorcito]=global.b;
                    global.contadorcito++;
                    global.r = global.a*global.b;
                }
            }
            if(global.dificultad&gt;=0){
            
                if(global.waveUltraFake==1){
                    for(i=0;i&lt;array_length_1d(global.numeros);i++){
                        global.numeros[i]=0;
                    }
                    global.b = choose(floor(random_range(global.minA,global.maxB)));
                    global.numeros[0]=global.b;
                    global.contadorcito = 1;
                }
                if(global.waveUltraFake&gt;1){
                    var aux=0;
                    var ii=0;
                    var arrayFake;
                    for(i=0;i&lt;array_length_1d(global.numero);i++){
                        aux=0;
                        for(j=0;j&lt;array_length_1d(global.numeros);j++){
                            if(global.numero[i]==global.numeros[j]){
                                aux=1;
                                break;
                            }
                        }
                        if(aux==0){
                            arrayFake[ii]=global.numero[i];
                            ii++;
                        }
                    }
                    var largo = array_length_1d(arrayFake)-1;
                    var indice = choose(floor(random_range(0,largo)));
                    global.b = arrayFake[indice];
                    global.numeros[global.contadorcito]=global.b;
                    global.contadorcito++;
                    
                }
                if(global.eFacil[global.dificultad]&gt;0){
                    global.origen = "facil";
                    global.a=global.faciles[0];
                    var numa=global.faciles[0];
                    for(x= 0; x&lt;array_length_1d(global.faciles)-1; x++){
                        global.faciles[x] = global.faciles[x+1];
                    }
                    global.faciles[array_length_1d(global.faciles)-1]= numa; 
                    global.eFacil[global.dificultad]--;
                }
                else{
                    if(global.eMedio[global.dificultad]&gt;0){
                        global.origen = "medio";
                        global.a=global.medios[0];
                        var numa=global.medios[0];
                        for(x= 0; x&lt;array_length_1d(global.medios)-1; x++){
                            global.medios[x] = global.medios[x+1];
                        }
                        global.medios[array_length_1d(global.medios)-1]= numa; 
                        global.eMedio[global.dificultad]--;
                    }
                    else{
                        if(global.eDificil[global.dificultad]&gt;0){
                            global.origen = "dificil";
                            global.a=global.dificiles[0];
                            var numa=global.dificiles[0];
                            for(x= 0; x&lt;array_length_1d(global.dificiles)-1; x++){
                                global.dificiles[x] = global.dificiles[x+1];
                            }
                            global.dificiles[array_length_1d(global.dificiles)-1]= numa; 
                            global.eDificil[global.dificultad]--;
                        }
                    }
                }
                global.r=global.a*global.b;
                
            
            }
        }
        if(global.modo==3) {
            global.a = choose(floor(random_range(2,12)));
            global.b = choose(floor(random_range(2,global.a)));
            global.r = global.a/global.b;
        }
        global.cont = 0;
        global.ccont=0;
        
        
        alarm[0] = room_speed*1;
        global.intentos = 0; /*CUANDO YA PASARON TODOS LOS ASTEROIDES (RONDA TERMINADA
                                EL CONTADOR DE INTENTOS SE RESETEA*/
        global.numEjercicio++;
        global.respondida = false;
        global.tiempoUltimaRespuesta = 0;
        global.aparicionCorrecta = 0;
        global.segundos = 0;
        global.estado = "omitida";
}else{

//nueva llamada 
alarm[0] = spawn_rate;
    
   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.segundos += 1/room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>muted</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>obj_mute</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>unmute</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>muted</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>music</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>obj_mute</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>mute</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>muted</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>music</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
